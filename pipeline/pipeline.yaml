apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-deploy-spring-boot
spec:
  workspaces:
    - name: shared-workspace
  params:
    - name: deployment-name
      type: string
      description: Name of the deployment to be patched
      default: my-spring-boot-app
    - name: IMAGE
      type: string
      description: Image to be built from the code
      default: docker.io/your-dockerhub-username/your-application-image
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: https://gitlab.com/your-gitlab-repo/your-spring-boot-app.git
        - name: subdirectory
          value: ""
        - name: deleteExisting
          value: "true"
        - name: revision
          value: master
    - name: build-image
      taskSpec:
        steps:
          - name: build
            image: docker:20.10.7-dind
            script: |
              #!/bin/sh
              dockerd-entrypoint.sh &

              # Wait for Docker to start
              while(! docker info > /dev/null 2>&1); do
                echo "Waiting for Docker to start..."
                sleep 1
              done

              # Build Docker image
              docker build -t $(params.IMAGE) .

              # Push Docker image
              docker push $(params.IMAGE)
        workspaces:
          - name: source
            workspace: shared-workspace
      runAfter:
        - fetch-repository
    - name: apply-manifests
      taskRef:
        name: openshift-client
        kind: ClusterTask
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: SCRIPT
          value: |
            oc apply -f manifests/
      runAfter:
        - build-image
    - name: update-deployment
      taskRef:
        name: openshift-client
        kind: ClusterTask
      params:
        - name: SCRIPT
          value: |
            oc set image deployment/$(params.deployment-name) $(params.deployment-name)=$(params.IMAGE)
      runAfter:
        - apply-manifests
